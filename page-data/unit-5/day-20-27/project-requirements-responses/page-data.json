{"componentChunkName":"component---src-templates-docs-js","path":"/unit-5/day-20-27/project-requirements-responses","result":{"data":{"site":{"siteMetadata":{"title":"MakeCode AP CSP","docsLocation":"https://github.com/microsoft/makecode-csp","docsLocationType":"github","editable":false}},"mdx":{"fields":{"id":"4ee97cea-f3dd-5173-9f13-9ec096b6b25b","title":"Unit 5 Culminating Project","slug":"/unit-5/day-20-27/project-requirements-responses"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Unit 5 Culminating Project\",\n  \"metaTitle\": \"Unit 5 Culminating Project\",\n  \"order\": 2\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Requirements\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Your project must\"), \":\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"\\u2B1C Implement that includes and executes:\", mdx(\"br\", null), \"\\n\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\u2B1C Functions with parameters and return values\", mdx(\"br\", null), \"\\n\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\u2B1C Conditional Statements and Boolean Operators\", mdx(\"br\", null), \"\\n\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\u2B1C User input\", mdx(\"br\", null), \"\\n\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\u2B1C While Loops\", mdx(\"br\", null), \"\\n\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\u2B1C Arrays\", mdx(\"br\", null), \"\\n\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\u2B1C Multiplayer\", mdx(\"br\", null), \"\\n\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\u2B1C Tile maps\", mdx(\"br\", null), \"\\n\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\u2B1C An extension (either an existing extension, or one you create)\", mdx(\"br\", null), \"\\n\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\u2B1C Documentation \\u2013 a user guide to explain how it works\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"When you create your program, you must test your program in at least two different ways. You will document those test cases here\"), \":\")), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"First test case\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Describe how you tested your program:\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Describe what condition in your program was being tested:\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Identify the result of the test case:\")), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Second test case\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Describe how you tested your program: \"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Describe what condition in your program was being tested: \"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Identify the result of the test case: \")), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Responses\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"When your program is complete, you must respond to the following prompts and include your responses in the chart provided:\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"The link to my project is:\"), mdx(\"br\", null), mdx(\"br\", null), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Screenshot of my code segment with labels of the algorithm implementations:\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Functions with parameters\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Return Values\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Conditional Statements \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"While Loops\")), mdx(\"br\", null), mdx(\"br\", null), mdx(\"br\", null), mdx(\"br\", null), mdx(\"br\", null), mdx(\"br\", null), mdx(\"br\", null), mdx(\"br\", null), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Screencast of my program running:\"), mdx(\"br\", null), mdx(\"br\", null), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"The purpose of my program is:\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Note\"), \": Purpose is defined as the problem being solved or creative interest being pursued through the program.\"), mdx(\"br\", null), mdx(\"br\", null), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"The function of my program is:\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Note\"), \": Program functionality is defined as the behavior of a program during execution and is often described by how a user interacts with it.\"), mdx(\"br\", null), mdx(\"br\", null), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"The input of my program is:\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"The output of my program is:\"), mdx(\"br\", null), mdx(\"br\", null), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Explain in detailed steps how the algorithms implemented in your program work. Your explanation must be detailed enough for someone else to recreate it.\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#requirements","title":"Requirements","items":[{"url":"#first-test-case","title":"First test case"},{"url":"#second-test-case","title":"Second test case"}]},{"url":"#responses","title":"Responses"}]},"timeToRead":1,"parent":{"__typename":"File","relativePath":"unit-5/day-20-27/project-requirements-responses.md","fields":{"gitLogLatestAuthorName":"Galen Nickel","gitLogLatestAuthorEmail":"gnickel@aquent.com","gitLogLatestDate":"3 minutes ago"}},"frontmatter":{"metaTitle":"Unit 5 Culminating Project","showMetadata":null,"editable":null,"showPreviousNext":null,"showToc":null}},"gitBranch":{"name":"main"},"gitCommit":{"hash":"e58d2182e4eda146f44eef3444eafe44c346237f","date":"2023-08-18 08:59"}},"pageContext":{"id":"4ee97cea-f3dd-5173-9f13-9ec096b6b25b"}},"staticQueryHashes":["12478684","12478684","2882937274","2882937274","353167761","353167761","3812332637","3812332637"]}