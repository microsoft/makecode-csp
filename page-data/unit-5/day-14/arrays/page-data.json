{"componentChunkName":"component---src-templates-docs-js","path":"/unit-5/day-14/arrays","result":{"data":{"site":{"siteMetadata":{"title":"MakeCode AP CSP","docsLocation":"https://github.com/microsoft/makecode-csp","docsLocationType":"github","editable":false}},"mdx":{"fields":{"id":"b7424a02-77e9-5cb5-b635-7587475961a7","title":"Arrays","slug":"/unit-5/day-14/arrays"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Arrays\",\n  \"metaTitle\": \"Arrays\",\n  \"order\": 0\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Summary\")), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Materials\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://1drv.ms/p/s!AqsgsTyHBmRBkRYY011U7s4fsSnZ?e=LP02DA\"\n  }), \"Day 14 PowerPoint deck\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    href: \"/unit-5/day-14/arrays-work\"\n  }, \"Arrays Work\"), \" handout\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://1drv.ms/w/s!AqsgsTyHBmRBkRcYQLtJkzZ18gC2?e=TQsWwI\"\n  }), \"Arrays Work\"), \" handout in Word\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://arcade.makecode.com/courses/csintro2/arrays/intro\"\n  }), \"Activity: Arrays Intro\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://makecode.com/_2hC5FvJcxYi5\"\n  }), \"Array Index Position Practice\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://makecode.com/_LutEA5U6J0U7\"\n  }), \"Array Iteration starting code\")))), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Instructional Activities and Classroom Assessments\"), mdx(\"ol\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Introduce Arrays (15 minutes)\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Activity: Create and Modify Arrays (35 minutes)\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Extension\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Reflection/Homework\"))), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Learning Objectives\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://apcentral.collegeboard.org/pdf/ap-computer-science-principles-course-and-exam-description.pdf?course=ap-computer-science-principles#page=70\"\n  }), \"AAP-1.A\"), \" Represent a value with a variable.\\u2002\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://apcentral.collegeboard.org/pdf/ap-computer-science-principles-course-and-exam-description.pdf?course=ap-computer-science-principles#page=23\"\n  }), \"3.A\"), \" \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://apcentral.collegeboard.org/pdf/ap-computer-science-principles-course-and-exam-description.pdf?course=ap-computer-science-principles#page=72\"\n  }), \"AAP-1.C\"), \" Represent a list or string using a variable.\\u2002\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://apcentral.collegeboard.org/pdf/ap-computer-science-principles-course-and-exam-description.pdf?course=ap-computer-science-principles#page=23\"\n  }), \"3.A\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://apcentral.collegeboard.org/pdf/ap-computer-science-principles-course-and-exam-description.pdf?course=ap-computer-science-principles#page=98\"\n  }), \"AAP-3.E\"), \" For generating random values:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"a. Write expressions to generate possible values. 2.B\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"b. Evaluate expressions to determine the possible results.\\u20024.B 2.B  \"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"AAP-1.D For data abstraction:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"a. Develop data abstraction using lists to store multiple elements.\\u20023.B\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"b. Explain how the use of data abstraction manages complexity in program code.\\u20023.C\"))))), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Essential Knowledge\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://apcentral.collegeboard.org/pdf/ap-computer-science-principles-course-and-exam-description.pdf?course=ap-computer-science-principles#page=70\"\n  }), \"AAP-1.A.1\"), \" A variable is an abstraction inside a program that can hold a value. Each variable has associated data storage that represents one value at a time, but that value can be a list or other collection that in turn contains multiple values.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://apcentral.collegeboard.org/pdf/ap-computer-science-principles-course-and-exam-description.pdf?course=ap-computer-science-principles#page=70\"\n  }), \"AAP-1.A.2\"), \" Using meaningful variable names helps with the readability of program code and understanding of what values are represented by the variables.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://apcentral.collegeboard.org/pdf/ap-computer-science-principles-course-and-exam-description.pdf?course=ap-computer-science-principles#page=70\"\n  }), \"AAP-1.A.3\"), \" Some programming languages provide types to represent data, which are referenced using variables. These types include numbers, Booleans, lists, and strings.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://apcentral.collegeboard.org/pdf/ap-computer-science-principles-course-and-exam-description.pdf?course=ap-computer-science-principles#page=70\"\n  }), \"AAP-1.A.4\"), \" Some values are better suited to representation using one type of datum rather than another.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://apcentral.collegeboard.org/pdf/ap-computer-science-principles-course-and-exam-description.pdf?course=ap-computer-science-principles#page=72\"\n  }), \"AAP-1.C.1\"), \" A list is an ordered sequence of elements. For example, \", \"[value1, value2, value3, ...]\", \" describes a list where value1 is the first element, value2 is the second element, value3 is the third element, and so on.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://apcentral.collegeboard.org/pdf/ap-computer-science-principles-course-and-exam-description.pdf?course=ap-computer-science-principles#page=72\"\n  }), \"AAP-1.C.2\"), \" An element is an individual value in a list that is assigned a unique index.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://apcentral.collegeboard.org/pdf/ap-computer-science-principles-course-and-exam-description.pdf?course=ap-computer-science-principles#page=72\"\n  }), \"AAP-1.C.3\"), \" An index is a common method for referencing the elements in a list or string using natural numbers.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"AAP-3.E.1 The exam reference sheet provides RANDOM(a, b) Block: RANDOM  a, b which generates and returns a random integer from a to b, inclusive. Each result is equally likely to occur. For example, RANDOM(1, 3) could return 1, 2, or 3.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"AAP-1.D.1 Data abstraction provides a separation between the abstract properties of a data type and the concrete details of its representation.  \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"AAP-1.D.2 Data abstractions manage complexity in programs by giving a collection of data a name without referencing the specific details of the representation.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"AAP-1.D.3 Data abstractions can be created using lists.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"AAP-1.D.8 The exam reference sheet describes a list structure whose index values are 1 through the number of elements in the list, inclusive. For all list operations, if a list index is less than 1 or greater than the length of the list, an error message is produced and the program will terminate.\"))), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Details\")), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"1. Introduction to Arrays (15 minutes)\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Define lists in computer science.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Explain how lists are used.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Demonstrate how to create a list in MakeCode.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Discuss lists on the Exam Reference Sheet.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Explain the difference between how arrays in MakeCode begin at index 0 and how on the AP exam lists begin at index 1.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Examine the different type of array procedures.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Discuss existing types of algorithms using lists and iteration.\"))), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"2. Activity:  Create and Modify Arrays (35 minutes)\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Direct students to the \", mdx(\"a\", {\n    href: \"/unit-5/day-14/arrays-work\"\n  }, \"Arrays Work\"), \" page.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Students will go to the \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://arcade.makecode.com/courses/csintro2/arrays/intro\"\n  }), \"Activity: Arrays Intro\"), \" webpage.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Instruct students to complete Tasks 1-2.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Encourage students to publish their work and paste the links on their \", mdx(\"a\", {\n    href: \"/unit-5/day-14/arrays-work\"\n  }, \"Arrays Work\"), \" page.\"))), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"3. Extension\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If students finish early, they can complete the extension activity.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Encourage students to use JavaScript or Python to create the projects from Task 1 and 2.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You can also encourage students to incorporate these concepts into an existing project.\"))), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"4. Reflection/Homework\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"If you run out of time, you may also assign this as individual homework. Students should complete their reflection.\")), mdx(\"ol\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"What is the difference between creating an array of numbers and storing multiple values as individual variables (as in, value1 = 1, value2 = 2,  value3 ...)?\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"What can an array do that storing different variables by themselves cannot?\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"How does the length of an array relate to the position of the final element?\"))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#summary","title":"Summary","items":[{"url":"#materials","title":"Materials"},{"url":"#instructional-activities-and-classroom-assessments","title":"Instructional Activities and Classroom Assessments"},{"url":"#learning-objectives","title":"Learning Objectives"},{"url":"#essential-knowledge","title":"Essential Knowledge"}]},{"url":"#details","title":"Details","items":[{"url":"#1-introduction-to-arrays-15-minutes","title":"1. Introduction to Arrays (15 minutes)"},{"url":"#2-activity--create-and-modify-arrays-35-minutes","title":"2. Activity:  Create and Modify Arrays (35 minutes)"},{"url":"#3-extension","title":"3. Extension"},{"url":"#4-reflectionhomework","title":"4. Reflection/Homework"}]}]},"timeToRead":3,"parent":{"__typename":"File","relativePath":"unit-5/day-14/arrays.md","fields":{"gitLogLatestAuthorName":"Galen Nickel","gitLogLatestAuthorEmail":"gnickel@aquent.com","gitLogLatestDate":"3 minutes ago"}},"frontmatter":{"metaTitle":"Arrays","showMetadata":null,"editable":null,"showPreviousNext":null,"showToc":null}},"gitBranch":{"name":"main"},"gitCommit":{"hash":"e58d2182e4eda146f44eef3444eafe44c346237f","date":"2023-08-18 08:59"}},"pageContext":{"id":"b7424a02-77e9-5cb5-b635-7587475961a7"}},"staticQueryHashes":["12478684","12478684","2882937274","2882937274","353167761","353167761","3812332637","3812332637"]}