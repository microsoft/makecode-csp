{"componentChunkName":"component---src-templates-docs-js","path":"/unit-5/day-7/logic-in-loops","result":{"data":{"site":{"siteMetadata":{"title":"MakeCode AP CSP","docsLocation":"https://github.com/microsoft/makecode-csp","docsLocationType":"github","editable":false}},"mdx":{"fields":{"id":"fabcbdd2-5629-52f5-8f69-b48981969d25","title":"Logic in Loops","slug":"/unit-5/day-7/logic-in-loops"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Logic in Loops\",\n  \"metaTitle\": \"Logic in Loops\",\n  \"order\": 0\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Summary\")), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Materials\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://1drv.ms/p/s!AqsgsTyHBmRBkHoq2MZXAaVODyYj?e=jVzh3A\"\n  }), \"Day 7 PowerPoint Deck\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    href: \"/unit-5/day-7/logic-in-loops-activity\"\n  }, \"Logic in Loops Handout\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://1drv.ms/w/s!AqsgsTyHBmRBkHtYAcWKVGZfi5c3?e=cOoWSD\"\n  }), \"Logic in Loops Handout\"), \" in Word\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    href: \"/unit-5/day-7/logic-in-loops-unplugged\"\n  }, \"Logic in Loops Unplugged\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    href: \"/unit-5/day-7/sentence-puzzles\"\n  }, \"Sentence Puzzles\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Decks of cards\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Dice\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Tape \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://arcade.makecode.com/courses/csintro2/logic/while\"\n  }), \"Activity: Logic in Loops\")))), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Instructional Activities and Classroom Assessments\"), mdx(\"ol\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Review Loop and Logic (5 minutes)\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Sentence Puzzles: Logic in Loops Unplugged Activity (10 minutes)\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Introduce Logic in Loops (10 minutes)\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Activity: Logic in Loops (25 minutes)\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Reflection/Homework\"))), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Learning Objectives\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://apcentral.collegeboard.org/pdf/ap-computer-science-principles-course-and-exam-description.pdf?course=ap-computer-science-principles#page=78\"\n  }), \"AAP-2.E\"), \" For relationships between two variables, expressions, or values:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"a. Write expressions using relational operators. \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://apcentral.collegeboard.org/pdf/ap-computer-science-principles-course-and-exam-description.pdf?course=ap-computer-science-principles#page=23\"\n  }), \"2.B\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"b. Evaluate expressions that use relation operators. \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://apcentral.collegeboard.org/pdf/ap-computer-science-principles-course-and-exam-description.pdf?course=ap-computer-science-principles#page=23\"\n  }), \"4.B\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://apcentral.collegeboard.org/pdf/ap-computer-science-principles-course-and-exam-description.pdf?course=ap-computer-science-principles#page=80\"\n  }), \"AAP-2.H\"), \" For selection:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"a. Write conditional statements.\\u2002\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://apcentral.collegeboard.org/pdf/ap-computer-science-principles-course-and-exam-description.pdf?course=ap-computer-science-principles#page=23\"\n  }), \"2.B\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"b. Determine the result of conditional statements.\\u2002\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://apcentral.collegeboard.org/pdf/ap-computer-science-principles-course-and-exam-description.pdf?course=ap-computer-science-principles#page=23\"\n  }), \"4.B\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://apcentral.collegeboard.org/pdf/ap-computer-science-principles-course-and-exam-description.pdf?course=ap-computer-science-principles#page=83\"\n  }), \"AAP-2.K\"), \" For iteration:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"a. Write iteration statements.\\u2002\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://apcentral.collegeboard.org/pdf/ap-computer-science-principles-course-and-exam-description.pdf?course=ap-computer-science-principles#page=23\"\n  }), \"2.B\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"b. Determine the result or side effect of iteration statements.\\u2002\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://apcentral.collegeboard.org/pdf/ap-computer-science-principles-course-and-exam-description.pdf?course=ap-computer-science-principles#page=23\"\n  }), \"4.B\")))))), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Essential Knowledge\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://apcentral.collegeboard.org/pdf/ap-computer-science-principles-course-and-exam-description.pdf?course=ap-computer-science-principles#page=78\"\n  }), \"AAP-2.E.1\"), \" A Boolean value is either true or false.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://apcentral.collegeboard.org/pdf/ap-computer-science-principles-course-and-exam-description.pdf?course=ap-computer-science-principles#page=78\"\n  }), \"AAP-2.E.2\"), \" The exam reference sheet provides the following relational operators: =, \\u2260, >, <, \\u2265, and \\u2264. Text and Block:\", mdx(\"br\", null), \"\\n\\xA7 a = b\", mdx(\"br\", null), \"\\n\\xA7 a \\u2260 b\", mdx(\"br\", null), \"\\n\\xA7 a > b\", mdx(\"br\", null), \"\\n\\xA7 a < b\", mdx(\"br\", null), \"\\n\\xA7 a \\u2265 b\", mdx(\"br\", null), \"\\n\\xA7 a \\u2264 b\", mdx(\"br\", null), \"\\nThese are used to test the relationship between two variables, expressions, or values. A comparison using a relational operator evaluates to a Boolean value. For example,  a = b evaluates to true if a and b are equal; otherwise, it evaluates  to false.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://apcentral.collegeboard.org/pdf/ap-computer-science-principles-course-and-exam-description.pdf?course=ap-computer-science-principles#page=80\"\n  }), \"AAP-2.H.1\"), \" Conditional statements, or \\u201Cif-statements,\\u201D affect the sequential flow of control by executing different statements based on the value of a Boolean expression.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://apcentral.collegeboard.org/pdf/ap-computer-science-principles-course-and-exam-description.pdf?course=ap-computer-science-principles#page=80\"\n  }), \"AAP-2.H.2\"), \" The exam reference sheet provides\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Text: IF(condition) { \", \"<\", \"block of statements\", \">\", \" }\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Block: IF condition block of statements in which the code in block of statements is executed if the Boolean expression condition evaluates to true; no action is taken if condition evaluates to false.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://apcentral.collegeboard.org/pdf/ap-computer-science-principles-course-and-exam-description.pdf?course=ap-computer-science-principles#page=83\"\n  }), \"AAP-2.K.1\"), \" Iteration statements change the sequential flow of control by repeating a set of statements zero or more times, until a stopping condition is met.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://apcentral.collegeboard.org/pdf/ap-computer-science-principles-course-and-exam-description.pdf?course=ap-computer-science-principles#page=84\"\n  }), \"AAP-2.K.3\"), \" The exam reference sheet provides\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Text: REPEAT UNTIL(condition) { \", \"<\", \"block of statements\", \">\", \" }\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Block: REPEAT UNTIL block of statements condition in which the code in block of statements is repeated until the Boolean expression condition evaluates to true.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://apcentral.collegeboard.org/pdf/ap-computer-science-principles-course-and-exam-description.pdf?course=ap-computer-science-principles#page=84\"\n  }), \"AAP-2.K.4\"), \" In REPEAT UNTIL(condition) iteration, an infinite loop occurs when the ending condition will never evaluate to true.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://apcentral.collegeboard.org/pdf/ap-computer-science-principles-course-and-exam-description.pdf?course=ap-computer-science-principles#page=84\"\n  }), \"AAP-2.K.5\"), \" In REPEAT UNTIL(condition) iteration, if the conditional evaluates to true initially, the loop body is not executed at all, due to the condition being checked before the loop.\")))), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Details\")), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"1. Loops and Logic review (5 minutes)\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Define Loops\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Explain the benefit of loops\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Define logical expression\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Explain the benefit or Boolean arithmetic logical\"))), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"2. Sentence puzzles: Logic in Loops unplugged activity (10 minutes)\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Direct students to get in groups and play a game with cards and dice.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Students will describe the process using the concepts of loops and logic.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Students will write the process in Pseudocode.\"))), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"3. Introduce Logic in Loops (10 minutes)\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Define conditional statements if, else, when.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Reinforce students' knowledge regarding iteration.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Demonstrate using conditional statements.\"))), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"4. Activity: User Input and String Logic (25 minutes)\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Direct students to go to their \", mdx(\"a\", {\n    href: \"/unit-5/day-7/logic-in-loops-activity\"\n  }, \"Activity: Logic in Loops\"), \" page.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Direct students to complete Tasks 1 and 2.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If students have time, encourage them to use functions and parameters in the fireball game to make it easier to manage and to recreate code segments in JavaScript.\"))), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"5. Reflection/Homework\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"If you run out of time, you may also assign this as individual homework. Students should complete their reflection.\")), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"In task #2, you implemented a basic \\u201Cpassword checker.\\u201D What is one possible downside of the way that the code was implemented? \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"List at least two ways in which user input could be used in writing a text based game.\"))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#summary","title":"Summary","items":[{"url":"#materials","title":"Materials"},{"url":"#instructional-activities-and-classroom-assessments","title":"Instructional Activities and Classroom Assessments"},{"url":"#learning-objectives","title":"Learning Objectives"},{"url":"#essential-knowledge","title":"Essential Knowledge"}]},{"url":"#details","title":"Details","items":[{"url":"#1-loops-and-logic-review-5-minutes","title":"1. Loops and Logic review (5 minutes)"},{"url":"#2-sentence-puzzles-logic-in-loops-unplugged-activity-10-minutes","title":"2. Sentence puzzles: Logic in Loops unplugged activity (10 minutes)"},{"url":"#3-introduce-logic-in-loops-10-minutes","title":"3. Introduce Logic in Loops (10 minutes)"},{"url":"#4-activity-user-input-and-string-logic-25-minutes","title":"4. Activity: User Input and String Logic (25 minutes)"},{"url":"#5-reflectionhomework","title":"5. Reflection/Homework"}]}]},"timeToRead":2,"parent":{"__typename":"File","relativePath":"unit-5/day-7/logic-in-loops.md","fields":{"gitLogLatestAuthorName":"Eric Anderson","gitLogLatestAuthorEmail":"eanders@microsoft.com","gitLogLatestDate":"2 minutes ago"}},"frontmatter":{"metaTitle":"Logic in Loops","showMetadata":null,"editable":null,"showPreviousNext":null,"showToc":null}},"gitBranch":{"name":"main"},"gitCommit":{"hash":"44b18df7a7de89e45de8fb1903cb34fe53671214","date":"2025-03-04 06:22"}},"pageContext":{"id":"fabcbdd2-5629-52f5-8f69-b48981969d25"}},"staticQueryHashes":["12478684","12478684","2882937274","2882937274","353167761","353167761","3812332637","3812332637"]}