{"componentChunkName":"component---src-templates-docs-js","path":"/unit-5/day-5/boolean-statements-expressions","result":{"data":{"site":{"siteMetadata":{"title":"MakeCode AP CSP","docsLocation":"https://github.com/microsoft/makecode-csp","docsLocationType":"github","editable":false}},"mdx":{"fields":{"id":"4b87f39b-869b-5181-ae40-ee61fce5c25c","title":"Boolean Statements and Expressions","slug":"/unit-5/day-5/boolean-statements-expressions"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Boolean Statements and Expressions\",\n  \"metaTitle\": \"Boolean Statements and Expressions\",\n  \"order\": 1\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Activity\")), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"A. We worked on Task 1 together in class. Add the link to your project here\")), mdx(\"section\", null, mdx(\"h4\", {\n    parentName: \"section\"\n  }, \"Task 1\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Mod the Hungry Game:\"), mdx(\"ol\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"When the A button is pressed, instead of setting the value of isHungry to True, set it to be the opposite of what it currently is. \"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Add another Boolean variable \\u201CisBackgroundYellow\\u201D = true. \"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Add same code to On A button pressed to toggle that value. \"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Add another If...Then\\u2026 Else statement to On Game Update to check the value of isBackgroundYellow and change the background color. \"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Comment your code.\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Shared project link\"), \":\")), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"B. You and a partner worked on Task 2 together in class. Add the link to your project here\")), mdx(\"section\", null, mdx(\"h4\", {\n    parentName: \"section\"\n  }, \"Task 2 Section B\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"NOT Left is Right:\"), mdx(\"ol\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Create a sprite, move the sprite with buttons.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Make a variable named isLeft and set it to false.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"In on game update, assign isLeft to a sprite\\u2019s x position < 80 comparison.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Use an If block to check if NOT(isLeft).\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"If so, make your Sprite say \\u201CRight!\\u201D for 200ms\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Comment your code.\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Shared project link\"), \":\")), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"C. Go to Activity: Boolean Statements and Expressions. Complete student tasks 3-4.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://arcade.makecode.com/courses/csintro2/logic/booleans\"\n  }), \"Boolean Statements and Expressions\"))), mdx(\"section\", null, mdx(\"h4\", {\n    parentName: \"section\"\n  }, \"Task 3\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Pizza or Burger:\"), mdx(\"ol\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Start a new project named pizzaBurger.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Create a sprite.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Create a new Boolean called pizza and set it to true.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Make pizza alternate values when the player presses B.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"When the player presses A, if pizza is true, then fire a pizza projectile, otherwise fire a burger projectile.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Comment your code.\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Shared project link\"), \":\")), mdx(\"section\", null, mdx(\"h4\", {\n    parentName: \"section\"\n  }, \"Task 4\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Hello, Bye:\"), mdx(\"ol\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Create a new project named helloGoodbye.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Create a sprite, make it move with directional keys.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"In on game update, make the sprite say \\u201Chello\\u201D for 200 ms when the sprite x value is less than 30 and sprite y is less than 30.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Add another if statement and make the sprite say \\u201Cbye\\u201D for 200 ms when the sprite x is greater than 80 or the sprite y is greater than 80.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Comment your code.\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Shared project link\"), \":\")), mdx(\"section\", null, mdx(\"h4\", {\n    parentName: \"section\"\n  }, \"Task 4 Challenge\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Create the same behavior while using one or more not blocks.\\nAdd comments to your code.\")), mdx(\"section\", null, mdx(\"h4\", {\n    parentName: \"section\"\n  }, \"Extension 1\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Use functions and parameters with this project.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Shared project link\"), \":\")), mdx(\"section\", null, mdx(\"h4\", {\n    parentName: \"section\"\n  }, \"Extension 2\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Recreate the project in JavaScript or Python.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Shared project link\"), \":\")), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Reflection/Homework\"), mdx(\"ol\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"What is a Boolean flag? Describe a case in which you might you want to use one?\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"What is the difference between an and block and an or block?\"))), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"In what cases will they both evaluate to true?\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"In what cases will they both evaluate to false?\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"In what cases will they evaluate differently?\"))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#activity","title":"Activity","items":[{"url":"#a-we-worked-on-task-1-together-in-class-add-the-link-to-your-project-here","title":"A. We worked on Task 1 together in class. Add the link to your project here","items":[{"url":"#task-1","title":"Task 1"}]},{"url":"#b-you-and-a-partner-worked-on-task-2-together-in-class-add-the-link-to-your-project-here","title":"B. You and a partner worked on Task 2 together in class. Add the link to your project here","items":[{"url":"#task-2-section-b","title":"Task 2 Section B"}]},{"url":"#c-go-to-activity-boolean-statements-and-expressions-complete-student-tasks-3-4","title":"C. Go to Activity: Boolean Statements and Expressions. Complete student tasks 3-4.","items":[{"url":"#task-3","title":"Task 3"},{"url":"#task-4","title":"Task 4"},{"url":"#task-4-challenge","title":"Task 4 Challenge"},{"url":"#extension-1","title":"Extension 1"},{"url":"#extension-2","title":"Extension 2"}]}]},{"url":"#reflectionhomework","title":"Reflection/Homework"}]},"timeToRead":2,"parent":{"__typename":"File","relativePath":"unit-5/day-5/boolean-statements-expressions.md","fields":{"gitLogLatestAuthorName":"Galen Nickel","gitLogLatestAuthorEmail":"gnickel@aquent.com","gitLogLatestDate":"3 minutes ago"}},"frontmatter":{"metaTitle":"Boolean Statements and Expressions","showMetadata":null,"editable":null,"showPreviousNext":null,"showToc":null}},"gitBranch":{"name":"main"},"gitCommit":{"hash":"e58d2182e4eda146f44eef3444eafe44c346237f","date":"2023-08-18 08:59"}},"pageContext":{"id":"4b87f39b-869b-5181-ae40-ee61fce5c25c"}},"staticQueryHashes":["12478684","12478684","2882937274","2882937274","353167761","353167761","3812332637","3812332637"]}