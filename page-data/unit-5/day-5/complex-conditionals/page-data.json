{"componentChunkName":"component---src-templates-docs-js","path":"/unit-5/day-5/complex-conditionals","result":{"data":{"site":{"siteMetadata":{"title":"MakeCode AP CSP","docsLocation":"https://github.com/microsoft/makecode-csp","docsLocationType":"github","editable":false}},"mdx":{"fields":{"id":"b95b0909-7f66-589c-aecd-41e38bf738a8","title":"Complex Conditionals","slug":"/unit-5/day-5/complex-conditionals"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Complex Conditionals\",\n  \"metaTitle\": \"Complex Conditionals\",\n  \"order\": 0\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Summary\")), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Materials\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://1drv.ms/p/s!AqsgsTyHBmRBkHbK5Mhjf4_lLic3?e=HfmE9b\"\n  }), \"Day 5 PowerPoint deck\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    href: \"/unit-5/day-5/boolean-statements-expressions\"\n  }, \"Boolean Statements and Expressions\"), \" handout\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://1drv.ms/w/s!AqsgsTyHBmRBkHevoEgMb3WTsnZv?e=gdkoAv\"\n  }), \"Boolean Statements and Expressions\"), \" handout in Word\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://arcade.makecode.com/courses/csintro2/logic/booleans\"\n  }), \"Activity: Boolean Statements and Expressions\")))), mdx(\"section\", null, mdx(\"h4\", {\n    parentName: \"section\"\n  }, \"Reference\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://arcade.makecode.com/blocks/logic/boolean\"\n  }), \"Boolean\")))), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Instructional Activities and Classroom Assessments\"), mdx(\"ol\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Boolean Refresher (5 minutes)\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Using Booleans (20 minutes)\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Boolean Practice (25 minutes)\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Reflection/Homework\"))), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Learning Objectives\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://apcentral.collegeboard.org/pdf/ap-computer-science-principles-course-and-exam-description.pdf?course=ap-computer-science-principles#page=78\"\n  }), \"AAP-2.E\"), \" For relationships between two variables, expressions, or values:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"a. Write expressions using relational operators. \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://apcentral.collegeboard.org/pdf/ap-computer-science-principles-course-and-exam-description.pdf?course=ap-computer-science-principles#page=23\"\n  }), \"2.B\"), \" \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"b. Evaluate expressions that use relation operators. \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://apcentral.collegeboard.org/pdf/ap-computer-science-principles-course-and-exam-description.pdf?course=ap-computer-science-principles#page=23\"\n  }), \"4.B\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://apcentral.collegeboard.org/pdf/ap-computer-science-principles-course-and-exam-description.pdf?course=ap-computer-science-principles#page=79\"\n  }), \"AAP-2.F\"), \" For relationships between Boolean values:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"a. Write expressions using logical operators.\\u2002\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://apcentral.collegeboard.org/pdf/ap-computer-science-principles-course-and-exam-description.pdf?course=ap-computer-science-principles#page=23\"\n  }), \"2.B\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"b. Evaluate expressions that use logic operators.\\u2002\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://apcentral.collegeboard.org/pdf/ap-computer-science-principles-course-and-exam-description.pdf?course=ap-computer-science-principles#page=23\"\n  }), \"4.B\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://apcentral.collegeboard.org/pdf/ap-computer-science-principles-course-and-exam-description.pdf?course=ap-computer-science-principles#page=80\"\n  }), \"AAP-2.H\"), \" For selection:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"a. Write conditional statements.\\u2002\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://apcentral.collegeboard.org/pdf/ap-computer-science-principles-course-and-exam-description.pdf?course=ap-computer-science-principles#page=23\"\n  }), \"2.B\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"b. Determine the result of conditional statements.\\u2002\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://apcentral.collegeboard.org/pdf/ap-computer-science-principles-course-and-exam-description.pdf?course=ap-computer-science-principles#page=23\"\n  }), \"4.B\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://apcentral.collegeboard.org/pdf/ap-computer-science-principles-course-and-exam-description.pdf?course=ap-computer-science-principles#page=82\"\n  }), \"AAP-2.I\"), \" For nested selection:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"a. Write nested conditional statements.\\u2002\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://apcentral.collegeboard.org/pdf/ap-computer-science-principles-course-and-exam-description.pdf?course=ap-computer-science-principles#page=23\"\n  }), \"2.B\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"b. Determine the result of nested conditional statements.\\u2002\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://apcentral.collegeboard.org/pdf/ap-computer-science-principles-course-and-exam-description.pdf?course=ap-computer-science-principles#page=23\"\n  }), \"4.B\")))))), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Essential Knowledge\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://apcentral.collegeboard.org/pdf/ap-computer-science-principles-course-and-exam-description.pdf?course=ap-computer-science-principles#page=78\"\n  }), \"AAP-2.E.1\"), \" A Boolean value is either true or false.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://apcentral.collegeboard.org/pdf/ap-computer-science-principles-course-and-exam-description.pdf?course=ap-computer-science-principles#page=78\"\n  }), \"AAP-2.E.2\"), \" The exam reference sheet provides the following relational operators: =, \\u2260, >, <, \\u2265, and \\u2264. Text and Block:\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"\\xA7 a = b\", mdx(\"br\", null), \"\\n\\xA7 a \\u2260 b\", mdx(\"br\", null), \"\\n\\xA7 a > b\", mdx(\"br\", null), \"\\n\\xA7 a < b\", mdx(\"br\", null), \"\\n\\xA7 a \\u2265 b\", mdx(\"br\", null), \"\\n\\xA7 a \\u2264 b\", mdx(\"br\", null), \"\\nThese are used to test the relationship between two variables, expressions, or values. A comparison using a relational operator evaluates to a Boolean value. For example, a = b evaluates to true if a and b are equal; otherwise, it evaluates to false.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://apcentral.collegeboard.org/pdf/ap-computer-science-principles-course-and-exam-description.pdf?course=ap-computer-science-principles#page=79\"\n  }), \"AAP-2.F.1\"), \" The exam reference sheet provides the logical operators NOT, AND, and OR, which evaluate to a Boolean value.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://apcentral.collegeboard.org/pdf/ap-computer-science-principles-course-and-exam-description.pdf?course=ap-computer-science-principles#page=79\"\n  }), \"AAP-2.F.2\"), \" The exam reference sheet provides Text: NOT condition Block: NOT condition which evaluates to true if condition is false; otherwise it evaluates to false.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://apcentral.collegeboard.org/pdf/ap-computer-science-principles-course-and-exam-description.pdf?course=ap-computer-science-principles#page=79\"\n  }), \"AAP-2.F.3\"), \" The exam reference sheet provides Text: condition1 AND condition2 Block: condition1 AND condition2 which evaluates to true if both condition1 and condition2 are true; otherwise it evaluates to false.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://apcentral.collegeboard.org/pdf/ap-computer-science-principles-course-and-exam-description.pdf?course=ap-computer-science-principles#page=79\"\n  }), \"AAP-2.F.4\"), \" The exam reference sheet provides Text: condition1 OR condition2 Block: condition1 OR condition2 which evaluates to true if condition1 is true or if condition2 is true or if both condition1 and condition2 are true; otherwise it evaluates to false.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://apcentral.collegeboard.org/pdf/ap-computer-science-principles-course-and-exam-description.pdf?course=ap-computer-science-principles#page=79\"\n  }), \"AAP-2.F.5\"), \" The operand for a logical operator is either a Boolean expression or a single Boolean value.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://apcentral.collegeboard.org/pdf/ap-computer-science-principles-course-and-exam-description.pdf?course=ap-computer-science-principles#page=80\"\n  }), \"AAP-2.H.1\"), \" Conditional statements, or \\\"if-statements,\\\" affect the sequential flow of control by executing different statements based on the value of a Boolean expression. \")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://apcentral.collegeboard.org/pdf/ap-computer-science-principles-course-and-exam-description.pdf?course=ap-computer-science-principles#page=80\"\n  }), \"AAP-2.H.2\"), \" The exam reference sheet provides\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Text: IF(condition) { \", \"<\", \"block of statements\", \">\", \" }\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Block: IF condition block of statements in which the code in block of statements is executed if the Boolean expression condition evaluates to true; no action is taken if condition evaluates to false.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://apcentral.collegeboard.org/pdf/ap-computer-science-principles-course-and-exam-description.pdf?course=ap-computer-science-principles#page=82\"\n  }), \"AAP-2.I.1\"), \" Nested conditional statements consist of conditional statements within conditional statements. \")))), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Details\")), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"1. Booleans refresher (5 minutes)\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Remind students what Boolean logic and Boolean variables are. \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Explain Boolean flags.\"))), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"2. Using Boolean (20 minutes)\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Students will further how to incorporate Boolean flags in their programs.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Students will evaluate code segments and modify them to use Boolean logic:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Students will work independently to modify the areYouHungry code segment to improve its functionality.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Students will work with a partner to use the NOT variable to move a sprite with the controllers and have the sprite say something.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Encourage students to publish their projects and add the links.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Guide students how to use:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"And\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Or\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Nested conditionals\"))))), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"3. Boolean practice (25 minutes)\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Go to \", mdx(\"a\", {\n    href: \"/unit-5/day-5/boolean-statements-expressions\"\n  }, \"Boolean Statements and Expressions\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Task students with completing Tasks 3 and 4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If students have time, encourage them to complete the extensions activities. \"))), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"4. Reflection/Homework\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"If you run out of time, you may also assign this as individual homework. Students should complete their reflection.\")), mdx(\"ol\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"What is a Boolean flag? Describe a case in which you might you want to use one?\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"What is the difference between an AND block and an OR block?\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"In what cases will they both evaluate to true?\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"In what cases will they both evaluate to false?\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"In what cases will they evaluate differently?\"))))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#summary","title":"Summary","items":[{"url":"#materials","title":"Materials","items":[{"url":"#reference","title":"Reference"}]},{"url":"#instructional-activities-and-classroom-assessments","title":"Instructional Activities and Classroom Assessments"},{"url":"#learning-objectives","title":"Learning Objectives"},{"url":"#essential-knowledge","title":"Essential Knowledge"}]},{"url":"#details","title":"Details","items":[{"url":"#1-booleans-refresher-5-minutes","title":"1. Booleans refresher (5 minutes)"},{"url":"#2-using-boolean-20-minutes","title":"2. Using Boolean (20 minutes)"},{"url":"#3-boolean-practice-25-minutes","title":"3. Boolean practice (25 minutes)"},{"url":"#4-reflectionhomework","title":"4. Reflection/Homework"}]}]},"timeToRead":2,"parent":{"__typename":"File","relativePath":"unit-5/day-5/complex-conditionals.md","fields":{"gitLogLatestAuthorName":"Galen Nickel","gitLogLatestAuthorEmail":"gnickel@aquent.com","gitLogLatestDate":"3 minutes ago"}},"frontmatter":{"metaTitle":"Complex Conditionals","showMetadata":null,"editable":null,"showPreviousNext":null,"showToc":null}},"gitBranch":{"name":"main"},"gitCommit":{"hash":"e58d2182e4eda146f44eef3444eafe44c346237f","date":"2023-08-18 08:59"}},"pageContext":{"id":"b95b0909-7f66-589c-aecd-41e38bf738a8"}},"staticQueryHashes":["12478684","12478684","2882937274","2882937274","353167761","353167761","3812332637","3812332637"]}