{"componentChunkName":"component---src-templates-docs-js","path":"/unit-2/day-9/rules-for-brainstorming","result":{"data":{"site":{"siteMetadata":{"title":"MakeCode AP CSP","docsLocation":"https://github.com/microsoft/makecode-csp","docsLocationType":"github","editable":false}},"mdx":{"fields":{"id":"9fcd0ec5-717f-55b6-93d0-bfd64b557f0c","title":"Rules for Brainstorming","slug":"/unit-2/day-9/rules-for-brainstorming"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Rules for Brainstorming\",\n  \"metaTitle\": \"Rules for Brainstorming\",\n  \"order\": 1\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Layout = makeShortcode(\"Layout\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Tool: Brainstorm Ideas\")), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Rules for brainstorming\"), mdx(Layout, {\n    mdxType: \"Layout\"\n  }, mdx(\"div\", null, mdx(\"hr\", null), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Defer judgment\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"There are no bad ideas at this point. There will be plenty of time\\nto judge ideas later.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Encourage wild ideas\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"It's the wild ideas that often create real innovation. It is always\\neasy to bring ideas down to earth later!\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Build on the ideas of others\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Think in terms of 'and' instead of 'but.' If you dislike an idea.\\nchallenge yourself to build on it and make it better.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Stay focused on the topic\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"You will get better output if everyone is disciplined.\")), mdx(\"div\", null, mdx(\"hr\", null), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Be Visual\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Try to engage the logical and the creative sides of the brain. A\\nquick sketch can help make your idea more understandable to\\nsomeone else.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"One conversation at a time\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Allow ideas to be heard and built upon.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Go for quantity\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Set a big goal for number of ideas and surpass it! Remember\\nthere is no need to make a lengthy case for your idea since no\\none is judging. Ideas should flow quickly.\")))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#tool-brainstorm-ideas","title":"Tool: Brainstorm Ideas","items":[{"url":"#rules-for-brainstorming","title":"Rules for brainstorming"}]}]},"timeToRead":1,"parent":{"__typename":"File","relativePath":"unit-2/day-9/rules-for-brainstorming.md","fields":{"gitLogLatestAuthorName":"Galen Nickel","gitLogLatestAuthorEmail":"gnickel@aquent.com","gitLogLatestDate":"3 minutes ago"}},"frontmatter":{"metaTitle":"Rules for Brainstorming","showMetadata":null,"editable":null,"showPreviousNext":null,"showToc":null}},"gitBranch":{"name":"main"},"gitCommit":{"hash":"e58d2182e4eda146f44eef3444eafe44c346237f","date":"2023-08-18 08:59"}},"pageContext":{"id":"9fcd0ec5-717f-55b6-93d0-bfd64b557f0c"}},"staticQueryHashes":["12478684","12478684","2882937274","2882937274","353167761","353167761","3812332637","3812332637"]}