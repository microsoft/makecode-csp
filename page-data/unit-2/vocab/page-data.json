{"componentChunkName":"component---src-templates-docs-js","path":"/unit-2/vocab","result":{"data":{"site":{"siteMetadata":{"title":"MakeCode AP CSP","docsLocation":"https://github.com/microsoft/makecode-csp","docsLocationType":"github","editable":false}},"mdx":{"fields":{"id":"7bebf50b-6ffa-58c9-8b3d-a418feabcd96","title":"Unit 2 Vocab","slug":"/unit-2/vocab"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Unit 2 Vocab\",\n  \"metaTitle\": \"Unit 2 Vocab\",\n  \"order\": 1\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Computer servers\"), \" - a more powerful computer that \\\"serves\\\" other computers by providing some service or functionality; usually housed in a data center so lots of other \\\"client\\\" computers can access it.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"File server\"), \" - stores and manages files that can be accessed by other computers on a network.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Web server\"), \" - responds to requests for webpages by other computers.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Routers\"), \" - devices that help \\\"route\\\" network requests and help connect computers and send data packets.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Embedded device\"), \" - a highly specialized device meant for a very specific purpose; usually embedded, or included within another object or as part of a larger system.\\nComputing system - a group of computing devices and programs working together for a common purpose.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Computer network\"), \" - a group of interconnected computing devices capable of sending and receiving data.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Node\"), \" - any addressable device on a network.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Network interface card\"), \" - allows a computer to join a network as a node; a node must have one to be able to join the network.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Network switches\"), \" - central nodes that move messages to nodes in the same network.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Network router\"), \" - connects two or separate networks.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Network bandwidth\"), \" - maximum amount of data that can be sent in a fixed amount of time.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Data transfer rate\"), \" - the time it takes to transfer data from one device to another (measured in Mbps - megabits per second).\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Uploading\"), \" - sending data (purchasing something, saving files to the cloud, sending files, posting on social media).\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Downloading\"), \" - receiving data (browsing websites, reading email, watching movie/videos, listening to music, playing online games).\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Latency\"), \" - how long it takes data to travel between its source and its destination.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"IP Address\"), \" - an Internet Protocol address is a unique numerical label assigned to each device connected to a computer network.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Hostname\"), \" - unique identification for a specific computer on the Internet.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Domain Name\"), \" - part of a hostname that identifies a specific organization or group; acts like a phonebook for the Internet.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Cloud computing\"), \" - a network of remote servers (powerful computers) located around the world, usually in large, safe buildings called Data Centers.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Packets\"), \" - packages/envelopes of information that contain chunks of data or metadata used for routing the packet between the origin and the destination on the Internet as well as for data reassembly.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Protocols\"), \" - networking rules that packets follow in order to get to the destination in the right order.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Transmission Control Protocol (TCP)\"), \" - the first protocol that helps the computer break the messages into packets, create a header for each packet that identifies the data, and assigns a port to the message.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Internet Protocol (IP)\"), \" - the next protocol that adds its own header, adding destination and sender's IP address to the packets, and deals with the routing of packets through interconnected networks to their destination.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Packet routing\"), \" - routers direct the packets as they move between networks; they choose the fastest (or cheapest) route (which is not necessarily the shortest route); usually dynamic, meaning it is not specified in advance.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Path\"), \" - sequence of directly connected computing devices; begins at sender and ends at receiver.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Internet\"), \" - a computer network consisting of interconnected networks that use standardized, open (non-proprietary) communication protocols).\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Fault tolerance\"), \" - a system that can support failures and still continue to function.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Redundancy\"), \" - the inclusion of extra components that can be used to mitigate failure of a system if other components fail.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"DDoS\"), \" - stands for distributed denial of service; cyber attack on a specific server or network that attempts to disrupt normal operations or traffic for that server. The attack floods the server or network with a constant flood of traffic that makes it impossible for the server to withstand the influx of messages.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Botnet\"), \" - group of bots used in a DDoS attack to overwhelm a site.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Sequential computing\"), \" - a computational model in which operations are performed in order one at a time.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Parallel computing\"), \" - a computational model where the program is broken into multiple smaller sequential computing operations, some of which are performed simultaneously.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Distributed computing\"), \" - a computational model in which multiple devices are used to run a program.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"HTTP\"), \" - Hypertext Transfer Protocol\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"HTTPS\"), \" - Hypertext Transfer Protocol Secure\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"URL\"), \" - Uniform Resource Locator\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"HTML\"), \" - Hypertext Markup Language\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Webpage\"), \" - page with information that is written in HTML and is published on the WWW.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Link\"), \" - connection between one page and another.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Website\"), \" - collection of webpages on the same domain.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Web browser\"), \" - Software that displays an HTML page; HTML tags guide the browser.\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{},"timeToRead":3,"parent":{"__typename":"File","relativePath":"unit-2/vocab.md","fields":{"gitLogLatestAuthorName":"Galen Nickel","gitLogLatestAuthorEmail":"gnickel@aquent.com","gitLogLatestDate":"3 minutes ago"}},"frontmatter":{"metaTitle":"Unit 2 Vocab","showMetadata":null,"editable":null,"showPreviousNext":null,"showToc":null}},"gitBranch":{"name":"main"},"gitCommit":{"hash":"e58d2182e4eda146f44eef3444eafe44c346237f","date":"2023-08-18 08:59"}},"pageContext":{"id":"7bebf50b-6ffa-58c9-8b3d-a418feabcd96"}},"staticQueryHashes":["12478684","12478684","2882937274","2882937274","353167761","353167761","3812332637","3812332637"]}