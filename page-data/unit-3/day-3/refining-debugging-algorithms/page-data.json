{"componentChunkName":"component---src-templates-docs-js","path":"/unit-3/day-3/refining-debugging-algorithms","result":{"data":{"site":{"siteMetadata":{"title":"MakeCode AP CSP","docsLocation":"https://github.com/microsoft/makecode-csp","docsLocationType":"github","editable":false}},"mdx":{"fields":{"id":"f0c38d3a-56bd-5ddb-8026-6a9540cc7478","title":"Refining and Debugging Algorithms","slug":"/unit-3/day-3/refining-debugging-algorithms"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Refining and Debugging Algorithms\",\n  \"metaTitle\": \"Refining and Debugging Algorithms\",\n  \"order\": 0\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Summary\")), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Materials\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://1drv.ms/w/s!AqsgsTyHBmRBkE3VD8KutavMfQ6j?e=QPHDZt\"\n  }), \"Day 3 PowerPoint deck\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://arcade.makecode.com/\"\n  }), \"MakeCode Arcade\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    href: \"/unit-3/day-3/my-add-ages\"\n  }, \"My Add Ages in the Room Program\")))), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Instructional Activities and Classroom Assessments\"), mdx(\"ol\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Algorithm Review (5 minutes)\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Building Blocks of Algorithms (10 minutes)\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Create Program for Add All Ages in the Room (10 minutes)\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Debugger Mode (10 minutes)\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Commenting on Your Code (5 minutes)\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Modify your Program (5 minutes)\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Reflection/Homework (5 minutes)\"))), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Learning Objectives\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://apcentral.collegeboard.org/pdf/ap-computer-science-principles-course-and-exam-description.pdf?course=ap-computer-science-principles#page=75\"\n  }), \"AAP-2.A\"), \" Express an algorithm that uses sequencing without using a programming language.\\u2002\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://apcentral.collegeboard.org/pdf/ap-computer-science-principles-course-and-exam-description.pdf?course=ap-computer-science-principles#page=23\"\n  }), \"2.A\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://apcentral.collegeboard.org/pdf/ap-computer-science-principles-course-and-exam-description.pdf?course=ap-computer-science-principles#page=86\"\n  }), \"AAP-2.M\"), \" For algorithms:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"ol\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Create algorithms.\\u2002\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://apcentral.collegeboard.org/pdf/ap-computer-science-principles-course-and-exam-description.pdf?course=ap-computer-science-principles#page=23\"\n  }), \"2.A\")))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://apcentral.collegeboard.org/pdf/ap-computer-science-principles-course-and-exam-description.pdf#page=45\"\n  }), \"CRD-2.G\"), \" Describe the purpose of a code segment or program by writing documentation. \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://apcentral.collegeboard.org/pdf/ap-computer-science-principles-course-and-exam-description.pdf#page=23\"\n  }), \"4.A\")))), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Essential Knowledge\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://apcentral.collegeboard.org/pdf/ap-computer-science-principles-course-and-exam-description.pdf?course=ap-computer-science-principles#page=75\"\n  }), \"AAP-2.A.1\"), \" An algorithm is a finite set of instructions that accomplish a specific task.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://apcentral.collegeboard.org/pdf/ap-computer-science-principles-course-and-exam-description.pdf?course=ap-computer-science-principles#page=86\"\n  }), \"AAP-2.M.1\"), \" Algorithms can be created from an idea, by combining existing algorithms, or by modifying existing algorithms.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://apcentral.collegeboard.org/pdf/ap-computer-science-principles-course-and-exam-description.pdf#page=45\"\n  }), \"CRD-2.G.1\"), \" Program documentation is a written description of the function of a code segment, event, procedure, or program and how it was developed.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://apcentral.collegeboard.org/pdf/ap-computer-science-principles-course-and-exam-description.pdf#page=45\"\n  }), \"CRD-2.G.3\"), \" Programmers should document a program throughout its development.\"))), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Details\")), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"1. Algorithms review (5 minutes)\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Remind students of the Add All Ages in the Room algorithm that they created yesterday.\\nNote that to make it work we had to hardcode everyone's age.\\nBut there is a way for a user to input each person's age.\")), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"2. Building blocks of algorithms (10 minutes)\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Connect flowchart shapes to the types of programming constructs commonly used in algorithm implementations:\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sequence \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Selection\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Iteration\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Review an everyday algorithm and identify the sequence, selection, and iteration constructs.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Discuss the add ages of people in the room algorithm.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Define data values.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Discuss the two types of data values:\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Constants\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Literal constants\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Named constants\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Variables\"))), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"3. Create program for Add All Ages in the Room (10 minutes)\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Guide students through the process of creating a program for adding all ages in the room:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Create variables\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Ask for number\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"How many people are in the room?\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Set N\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Repeat block\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Ask for number\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"How old are you?\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Change N by\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Splash\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Error message for argument of type number\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Join block\"))))))), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"4. Debugger mode (10 minutes)\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Discuss what debug programs do.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Introduce MakeCode debugger mode.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Encourage students to run the program with the debugger mode open.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Point out to students the variables that are in the debugger area when they run the program:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"N - should change as they enter new ages.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Index - keeps track of how many times the program asks How old are you and changes N.\"))))), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"5. Commenting on your code (5 minutes)\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Explain what program documentation is and its purpose.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Discuss how programmers use comments to document their development.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Show students how to make comments in MakeCode.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Encourage students to comment on their program.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Encourage students to save their work at this point and add the link here - \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/makecode-csp/unit-3/day-3/my-add-ages\"\n  }), \"My Add Ages in the Room Program\"), \":\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"They can do this by create a Link to their program\\u202Fwith the Share button.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Depending on your class collaboration system, you can have students copy and paste their program links in an email, LMS system, Class OneNote, or other tool.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Alternately, they can download their programs as .png files on their local computers or on a shared file system.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Note - by default most browsers will download files to the \\\"Download\\\" folder on a computer.\\u202F You can change this behavior if you want by configuring the browser settings (instructions in PowerPoint deck).\"))))), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"6. Modify your program (5 minutes)\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Ask students if there is a different way to calculate your total ages:\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Can you create a different way to calculate all of your ages?\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Is there a way to accurately calculate your ages with fewer entries?\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Encourage students to explore different commands to see if they can develop a different way to calculate the ages of everyone in the room.\"))), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"7. Reflection (5 minutes)\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"If you run out of time, you may also assign this as individual homework. Students should complete their reflection in their OneNote.\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"What is the origin of the term debug?\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"How does a debugger help your coding?\"))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#summary","title":"Summary","items":[{"url":"#materials","title":"Materials"},{"url":"#instructional-activities-and-classroom-assessments","title":"Instructional Activities and Classroom Assessments"},{"url":"#learning-objectives","title":"Learning Objectives"},{"url":"#essential-knowledge","title":"Essential Knowledge"}]},{"url":"#details","title":"Details","items":[{"url":"#1-algorithms-review-5-minutes","title":"1. Algorithms review (5 minutes)"},{"url":"#2-building-blocks-of-algorithms-10-minutes","title":"2. Building blocks of algorithms (10 minutes)"},{"url":"#3-create-program-for-add-all-ages-in-the-room-10-minutes","title":"3. Create program for Add All Ages in the Room (10 minutes)"},{"url":"#4-debugger-mode-10-minutes","title":"4. Debugger mode (10 minutes)"},{"url":"#5-commenting-on-your-code-5-minutes","title":"5. Commenting on your code (5 minutes)"},{"url":"#6-modify-your-program-5-minutes","title":"6. Modify your program (5 minutes)"},{"url":"#7-reflection-5-minutes","title":"7. Reflection (5 minutes)"}]}]},"timeToRead":2,"parent":{"__typename":"File","relativePath":"unit-3/day-3/refining-debugging-algorithms.md","fields":{"gitLogLatestAuthorName":"Galen Nickel","gitLogLatestAuthorEmail":"gnickel@aquent.com","gitLogLatestDate":"3 minutes ago"}},"frontmatter":{"metaTitle":"Refining and Debugging Algorithms","showMetadata":null,"editable":null,"showPreviousNext":null,"showToc":null}},"gitBranch":{"name":"main"},"gitCommit":{"hash":"e58d2182e4eda146f44eef3444eafe44c346237f","date":"2023-08-18 08:59"}},"pageContext":{"id":"f0c38d3a-56bd-5ddb-8026-6a9540cc7478"}},"staticQueryHashes":["12478684","12478684","2882937274","2882937274","353167761","353167761","3812332637","3812332637"]}