{"componentChunkName":"component---src-templates-docs-js","path":"/unit-3/day-19-22/projects-requirements-responses","result":{"data":{"site":{"siteMetadata":{"title":"MakeCode AP CSP","docsLocation":"https://github.com/microsoft/makecode-csp","docsLocationType":"github","editable":false}},"mdx":{"fields":{"id":"6d7f98d8-9690-5f64-b694-9c2bececf003","title":"Project Requirements and Responses","slug":"/unit-3/day-19-22/projects-requirements-responses"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Project Requirements and Responses\",\n  \"metaTitle\": \"Project Requirements and Responses\",\n  \"order\": 2\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Your project must:\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"\\u2B1C Implement an algorithm that includes and executes:\", mdx(\"br\", null), \"\\n\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\u2B1C Sequencing\", mdx(\"br\", null), \"\\n\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\u2B1C Selection\", mdx(\"br\", null), \"\\n\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\u2B1C Use relational operators and/or Boolean variables.\", mdx(\"br\", null), \"\\n\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\u2B1C Incorporate a conditional statement or nested conditional statement.\", mdx(\"br\", null), \"\\n\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\u2B1C Iteration:\", mdx(\"br\", null), \"\\n\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\xA0\", \"\\u2B1C Use a loop in some way\", mdx(\"br\", null), \"\\n\\u2B1C Incorporate user input.\", mdx(\"br\", null), \"\\n\\u2B1C Uses strings and/or integers variables.\", mdx(\"br\", null), \"\\n\\u2B1C Ensure there is a visible output for your program.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Your project can also:\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"\\u2B1C Incorporate sprite(s) and/or projectile(s) variables.\", mdx(\"br\", null), \"\\n\\u2B1C Incorporate calculations.\", mdx(\"br\", null))), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"When you create your program, you must test your program in at least two different ways. You will document those test cases here:\")), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"First test case\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Describe how you tested your program: \"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Describe what condition in your program was being tested: \"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Identify the result of the test case: \")), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Second test case\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Describe how you tested your program: \"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Describe what condition in your program was being tested: \"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Identify the result of the test case: \")), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"When your program is complete, you must respond to the following prompts and include your responses in the chart provided:\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"The link to my project is:\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Snapshot of my code with labels of the algorithm implementations (sequencing, iteration, selection:\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Screencast recording of my program running:\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"The purpose of my program is:\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Note\"), \": Purpose is defined as the problem being solved or creative interest being pursued through the program.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"How my program functions is:\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Note\"), \": Program functionality is defined as the behavior of a program during execution and is often described by how a user interacts with it.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"The input of my program is:\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"The output of my program is:\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Explain in detailed steps how the algorithms implemented (sequencing, iteration, selection) in your program work. Your explanation must be detailed enough for someone else to recreate it.\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#your-project-must","title":"Your project must:"},{"url":"#when-you-create-your-program-you-must-test-your-program-in-at-least-two-different-ways-you-will-document-those-test-cases-here","title":"When you create your program, you must test your program in at least two different ways. You will document those test cases here:","items":[{"url":"#first-test-case","title":"First test case"},{"url":"#second-test-case","title":"Second test case"}]},{"url":"#when-your-program-is-complete-you-must-respond-to-the-following-prompts-and-include-your-responses-in-the-chart-provided","title":"When your program is complete, you must respond to the following prompts and include your responses in the chart provided:"}]},"timeToRead":1,"parent":{"__typename":"File","relativePath":"unit-3/day-19-22/projects-requirements-responses.md","fields":{"gitLogLatestAuthorName":"Galen Nickel","gitLogLatestAuthorEmail":"gnickel@aquent.com","gitLogLatestDate":"3 minutes ago"}},"frontmatter":{"metaTitle":"Project Requirements and Responses","showMetadata":null,"editable":null,"showPreviousNext":null,"showToc":null}},"gitBranch":{"name":"main"},"gitCommit":{"hash":"e58d2182e4eda146f44eef3444eafe44c346237f","date":"2023-08-18 08:59"}},"pageContext":{"id":"6d7f98d8-9690-5f64-b694-9c2bececf003"}},"staticQueryHashes":["12478684","12478684","2882937274","2882937274","353167761","353167761","3812332637","3812332637"]}