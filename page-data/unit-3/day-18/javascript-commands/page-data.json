{"componentChunkName":"component---src-templates-docs-js","path":"/unit-3/day-18/javascript-commands","result":{"data":{"site":{"siteMetadata":{"title":"MakeCode AP CSP","docsLocation":"https://github.com/microsoft/makecode-csp","docsLocationType":"github","editable":false}},"mdx":{"fields":{"id":"36d58a3e-68a0-5e9c-9296-0fecf6e9a26b","title":"JavaScript Commands","slug":"/unit-3/day-18/javascript-commands"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"JavaScript Commands\",\n  \"metaTitle\": \"JavaScript Commands\",\n  \"order\": 2\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Layout = makeShortcode(\"Layout\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Commands\"), mdx(Layout, {\n    mdxType: \"Layout\"\n  }, mdx(\"div\", null, mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"If - Else\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"If (true) { \\n    Status = true; \\n} else [ \\n    Status = false;\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Switch statement: \"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"var num = <input>\\nSwitch (num) { \\ncase O:\\n    document.write(\\\"zero\\\");\\ncase 1: \\n    document.write(\\\"one\\\");\\ndefault: \\n    document.write(\\\"welp\\\");\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Variables\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"var a;            //variable\\nb = \\\"init\\\";       //string\\nvarc 8;           //int\\nvar d false;      //Boolean\\nvar e[1,2,3,4,5]; //array\\nconst PI = 3.14;  //constant\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Functions\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"Function addNumbers(a,b) {\\n    return a + b;\\n}\\nX = addNumbers(1,2);\\n\"))), mdx(\"div\", null, mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Loops\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"For loop:\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"for (var i \\u2014O; i < 10; i++) { \\n    document.write(\\\"this will happen 10 times\\\");\\n}\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"While loop:\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"var i = 1;\\nwhile(i < 100) {\\n    i*=2; \\n    document.write(i);\\n}\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Do while loop:\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"var i = 1;\\ndo {\\n    i*=1;\\n    document.write(i); \\n} While (i < 100);\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Operators\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"A= b + c - d;    //Add, subtract \\nA = b * (c / d); //multiply, divide \\nX = 100 % 48;    // modulo, 100 / 48 remainder = 4\\na++; b--;        //postfix increment/decrement\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Other\"), \" \"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"a = b   //assignment \\na == b  //equals \\na != b  //not-equal \\na === b //strict equals \\na < b, a > b, a =< b, a => b //less/greater \\na && b  //logical and \\na || b  //logical or \\n\"))))), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"References\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"JavaScript Language:  \"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.w3schools.com/js/DEFAULT.asp\"\n  }), \"Tutorials\"), \" at \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.w3schools.com\"\n  }), \"W3schools.com\"), mdx(\"br\", null), \"\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.w3schools.com/jsref/default.asp\"\n  }), \"Reference\"), \" at \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.w3schools.com\"\n  }), \"W3schools.com\"))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#commands","title":"Commands"},{"url":"#references","title":"References"}]},"timeToRead":1,"parent":{"__typename":"File","relativePath":"unit-3/day-18/javascript-commands.md","fields":{"gitLogLatestAuthorName":"Eric Anderson","gitLogLatestAuthorEmail":"eanders@microsoft.com","gitLogLatestDate":"2 minutes ago"}},"frontmatter":{"metaTitle":"JavaScript Commands","showMetadata":null,"editable":null,"showPreviousNext":null,"showToc":null}},"gitBranch":{"name":"main"},"gitCommit":{"hash":"44b18df7a7de89e45de8fb1903cb34fe53671214","date":"2025-03-04 06:22"}},"pageContext":{"id":"36d58a3e-68a0-5e9c-9296-0fecf6e9a26b"}},"staticQueryHashes":["12478684","12478684","2882937274","2882937274","353167761","353167761","3812332637","3812332637"]}